{"version":3,"sources":["UsernameInput.js","PasswordInput.js","LoginForm.js","UserInfo.js","App.js","reportWebVitals.js","index.js"],"names":["UsernameInput","props","className","type","onChange","handleChange","PasswordInput","LoginForm","state","username","password","handleUsernameInput","bind","handlePasswordInput","submitExistingUser","submitNewUser","e","this","setState","target","value","a","urlToFetch","fetch","res","json","jsonRes","ok","setUser","user","localStorage","setItem","token","alert","message","JSONData","JSON","stringify","method","headers","body","submitUser","isNewUser","onClick","Component","UserInfo","logout","App","getItem","isLoggedIn","setCurrentUserAndLogIn","removeItem","formRouter","path","exact","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b333cf9c.chunk.js","sourcesContent":["const UsernameInput = props => {\r\n    return (\r\n    <div className=\"input username-input\">\r\n        <label>\r\n        <p>Введи имя пользователя</p>\r\n        <input type='text' onChange={props.handleChange} />\r\n        </label>\r\n    </div>)\r\n}\r\nexport default UsernameInput","const PasswordInput = props => {\r\n    return (\r\n    <div className=\"input password-input\">\r\n        <label>\r\n        <p>Введи пароль</p>\r\n        <input type='password' onChange={props.handleChange} />\r\n        </label>\r\n    </div>)\r\n}\r\nexport default PasswordInput","import { Component } from 'react'\r\nimport UsernameInput from './UsernameInput'\r\nimport PasswordInput from './PasswordInput'\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        this.handleUsernameInput = this.handleUsernameInput.bind(this)\r\n        this.handlePasswordInput = this.handlePasswordInput.bind(this)\r\n        this.submitExistingUser = this.submitExistingUser.bind(this)\r\n        this.submitNewUser = this.submitNewUser.bind(this)\r\n    }\r\n\r\n    handleUsernameInput(e) {\r\n        this.setState({username: e.target.value})\r\n    }\r\n\r\n    handlePasswordInput(e) {\r\n        this.setState({password: e.target.value})\r\n    }\r\n\r\n    async submitExistingUser() {\r\n        const urlToFetch = `http://localhost:4000/api?username=${this.state.username}&password=${this.state.password}`\r\n        const res = await fetch(urlToFetch)\r\n        const jsonRes = await res.json()\r\n        if (res.ok) {\r\n            this.props.setUser(jsonRes.user)\r\n            localStorage.setItem('token', jsonRes.token)\r\n            localStorage.setItem('username', jsonRes.user.username)\r\n        } else {\r\n            alert(jsonRes.message)\r\n        }\r\n    }\r\n\r\n    async submitNewUser() {\r\n        const urlToFetch = `http://localhost:4000/api/`\r\n        const JSONData = JSON.stringify({\r\n            user: {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }\r\n        })\r\n        const res = await fetch(urlToFetch, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSONData\r\n        })\r\n        const jsonRes = await res.json()\r\n        if (res.ok) {\r\n            this.props.setUser(jsonRes.user)\r\n            localStorage.setItem('token', jsonRes.token)\r\n            localStorage.setItem('username', jsonRes.user.username)\r\n        } else {\r\n            alert(jsonRes.message)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const submitUser = this.props.isNewUser ? this.submitNewUser : this.submitExistingUser\r\n        return(\r\n            <div className=\"form\">\r\n                <UsernameInput handleChange={this.handleUsernameInput} />\r\n                <PasswordInput handleChange={this.handlePasswordInput} />\r\n                <button type='submit' onClick={submitUser} className=\"btn waves-effect waves-light\">Отправь данные</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nconst UserInfo = props => {\r\n    return(\r\n    <div>\r\n        Имя: {props.username} <br/>\r\n        <button onClick={props.logout} className=\"btn waves-effect waves-light\">Выйти</button>\r\n    </div>)\r\n}\r\n\r\nexport default UserInfo","import {Component} from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport LoginForm from './LoginForm'\nimport UserInfo from './UserInfo'\nimport 'materialize-css/dist/css/materialize.min.css'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: {username: localStorage.getItem('username')},\n      isLoggedIn: !!localStorage.getItem('token')\n    }\n    this.setCurrentUserAndLogIn = this.setCurrentUserAndLogIn.bind(this)\n    this.logout = this.logout.bind(this)\n  }\n\n  setCurrentUserAndLogIn(user) {\n    this.setState({user: user, isLoggedIn: true})\n  }\n\n  logout() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('username')\n    this.setState({isLoggedIn: false})\n  }\n\n  render() { \n    const formRouter = <BrowserRouter>\n                          <h1 className=\"card-title\">Система регистрации</h1>         \n                            <Switch>\n                              <Route path=\"/\" exact>\n                              <div className=\"card-action\">\n                                <LoginForm isNewUser={false} setUser={this.setCurrentUserAndLogIn} />\n                                </div>\n                                <p>Нет аккаунта? <a href=\"/signup\">Зарегистрируйся</a></p>\n                              </Route>\n                              <Route path=\"/signup\" exact>\n                              <div className=\"card-action\">\n                                <LoginForm isNewUser={true} setUser={this.setCurrentUserAndLogIn} />\n                                </div>\n                                <p>Уже есть аккаунт? <a href=\"/\">Войти</a></p>\n                              </Route>\n                            </Switch>\n                        </BrowserRouter>\n    return (\n      <div className=\"App\">\n            <div className=\"card blue-grey darken-1\">\n              <div className=\"card-content white-text\">\n                {this.state.isLoggedIn ? \n                <UserInfo username={this.state.user.username} logout={this.logout} />\n                : formRouter}\n              </div>\n            </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}